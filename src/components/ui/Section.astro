---
interface Props {
	id?: string
	fullWidth?: boolean
	mode?: string
	bg?: BgProps
	bgHeight?: string
	classes?: string
}
interface BgProps {
	src: string
	width: number
	height: number
	format: string
}
const { id, fullWidth, mode, bg, bgHeight = '100%', classes } = Astro.props

const bgStyle = bg
	? {
			backgroundImage: `url(${bg.src})`,
			height: bgHeight
		}
	: {
			height: bgHeight
		}

const classList = classes
	? classes
			.split(' ')
			.map((cls) => `!${cls}`)
			.join(' ')
	: ''
---

<section
	{...id ? { id } : {}}
	class:list={[
		'section',
		{ 'section--fullwidth': fullWidth },
		{ [`${mode}`]: mode },
		{ [`!${classList}`]: classList }
	]}
>
	<div class="section__bg" style={bgStyle}></div>
	<div class="container">
		<slot />
	</div>
</section>

<style>
	.section {
		@apply relative py-24 dark:bg-neutral-900;
	}
	.section__bg {
		@apply absolute inset-0 bg-cover;
	}
	.container {
		@apply relative z-[1] mx-auto px-6 [.section--fullwidth_&]:max-w-full;
	}
</style>
